level 1: a<=b then a*t<=b*t
cases h with c h
use c*t
rw [← add_mul]
rw [← h]
rfl

level 2: a*b/=0 then b/=0
intro hb
apply h
rw [hb]
rw [mul_zero]
rfl

level 3: a/=0 then exist n such that a=succ(n)
cases a with d
tauto
use d
rfl

level 4: a/=0 then 1<=a
apply eq_succ_of_ne_zero at ha
cases a with d
tauto
rw [succ_eq_add_one]
use d
rw [add_comm]
rfl

level 5: a*b/=0 then a<=a*b
apply mul_left_ne_zero at h
apply one_le_of_ne_zero at h
apply mul_le_mul_right 1 b a at h
rw [one_mul, mul_comm b a] at h
exact h

level 6: x*y=1 then x=1
have h2 : x*y≠0
rw [h]
exact one_ne_zero
apply le_mul_right at h2
rw [h] at h2
apply le_one at h2
cases h2 with h2_zero h2_one
rw [h2_zero] at h
rw [zero_mul] at h
tauto
rw [h2_one]
rfl

level 7: a/=0 and b/=0 then a*b/=0
apply eq_succ_of_ne_zero at ha
cases ha
apply eq_succ_of_ne_zero at hb
cases hb
rw [h, h_1]
rw [succ_mul]
rw [mul_comm]
rw [succ_mul]
rw [succ_eq_add_one]
rw [← add_assoc]
rw [← succ_eq_add_one]
symm
apply zero_ne_succ

level 8: a*b=0 then a=0 or b=0
have h2 := mul_ne_zero a b
tauto

level 9: a/=0 and a*b=a*c then b=c
induction b with d hd generalizing c
rw [mul_zero] at h
symm at h
apply mul_eq_zero at h
tauto
cases c with e
symm at h
rw [mul_zero] at h
symm at h
apply mul_eq_zero at h
tauto
repeat rw [succ_eq_add_one, mul_add, mul_one] at h
apply add_right_cancel at h
apply hd at h
tauto

level 10: a/=0 and a*b=a then b=1
nth_rewrite 2 [← mul_one a] at h
apply mul_left_cancel at h
apply h
apply ha
